version: "2.1"
services:
  plex:
    image: ghcr.io/linuxserver/plex
    container_name: PLEXSTACK_Plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - ${PLEX_FILES_LOCATION}:/config
      - ${PLEX_TV_LIBRARY_FOLDER}:/tv
      - ${PLEX_MOVIES_LIBRARY_FOLDER}:/movies
    restart: unless-stopped

  transmission:
    image: ghcr.io/linuxserver/transmission
    container_name: PLEXSTACK_Transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - TRANSMISSION_WEB_HOME=/combustion-release/
      - USER=${TRANSMISSION_USER}
      - PASS=${TRANSMISSION_PASS}
    volumes:
      - ${TRANSMISSION_FILES_LOCATION}:/config
      - ${TRANSMISSION_FILES_LOCATION}/downloads:/downloads
      - ${TRANSMISSION_FILES_LOCATION}/watch:/watch
      - ${PLEX_TV_LIBRARY_FOLDER}:/tv
      - ${PLEX_MOVIES_LIBRARY_FOLDER}:/movies
      - /mnt/Media/books/downloads:/books
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped

  plexbuddy_mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password --max_allowed_packet=32505856 --net_read_timeout=700
    container_name: PLEXSTACK_Mysql
    network_mode: host
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASS}
      MYSQL_TCP_PORT: ${MYSQL_PORT}
    volumes:
    - ${MYSQL_DB_LOCATION}:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  imdb_sync_service:
    container_name: PLEXSTACK_IMDB_sync
    network_mode: host
    build:
      context: ./
      dockerfile: Dockerfile_MAINSTACK_myimdb
    restart: unless-stopped
    depends_on:
      plexbuddy_mysql:
        condition: service_healthy

  filelist_service:
    container_name: PLEXSTACK_Filelist
    network_mode: host
    build:
      context: ./
      dockerfile: Dockerfile_MAINSTACK_newsletter
    restart: unless-stopped
    depends_on:
      plexbuddy_mysql:
        condition: service_healthy

  torrent_service:
    container_name: PLEXSTACK_TorrentAPI
    network_mode: host
    build:
      context: ./
      dockerfile: Dockerfile_MAINSTACK_torrapi
    restart: unless-stopped
    depends_on:
      plexbuddy_mysql:
        condition: service_healthy

  telegram_service:
    container_name: PLEXSTACK_Telegram
    network_mode: host
    build:
      context: ./
      dockerfile: Dockerfile_MAINSTACK_telegram
    restart: unless-stopped
    depends_on:
      plexbuddy_mysql:
        condition: service_healthy
